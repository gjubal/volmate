{"ast":null,"code":"var _jsxFileName = \"/Users/gabrieldsilva/Library/Mobile Documents/com~apple~CloudDocs/Documents/code/dev/volmate/client/src/hooks/toast.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useCallback, useContext, useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport ToastContainer from '../components/ToastContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToastContext = /*#__PURE__*/createContext({});\n\nconst ToastProvider = ({\n  children\n}) => {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  const addToast = useCallback(({\n    type,\n    title,\n    description\n  }) => {\n    const id = uuid();\n    const toast = {\n      id,\n      type,\n      title,\n      description\n    };\n    setMessages(state => [...state, toast]);\n  }, []);\n  const removeToast = useCallback(id => {\n    setMessages(state => state.filter(message => message.id !== id));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ToastContext.Provider, {\n    value: {\n      addToast,\n      removeToast\n    },\n    children: [children, /*#__PURE__*/_jsxDEV(ToastContainer, {\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ToastProvider, \"B21RFwG32JC+fV89pZ9By69CAIM=\");\n\n_c = ToastProvider;\n\nfunction useToast() {\n  _s2();\n\n  const context = useContext(ToastContext);\n\n  if (!context) {\n    throw new Error('useToast must be used within an ToastProvider');\n  }\n\n  return context;\n}\n\n_s2(useToast, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { ToastProvider, useToast };\n\nvar _c;\n\n$RefreshReg$(_c, \"ToastProvider\");","map":{"version":3,"sources":["/Users/gabrieldsilva/Library/Mobile Documents/com~apple~CloudDocs/Documents/code/dev/volmate/client/src/hooks/toast.tsx"],"names":["React","createContext","useCallback","useContext","useState","v4","uuid","ToastContainer","ToastContext","ToastProvider","children","messages","setMessages","addToast","type","title","description","id","toast","state","removeToast","filter","message","useToast","context","Error"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,UAA5C,EAAwDC,QAAxD,QAAwE,OAAxE;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;;AAcA,MAAMC,YAAY,gBAAGP,aAAa,CAAmB,EAAnB,CAAlC;;AAEA,MAAMQ,aAAuB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAChD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAiB,EAAjB,CAAxC;AAEA,QAAMS,QAAQ,GAAGX,WAAW,CAC1B,CAAC;AAAEY,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAD,KAA4D;AAC1D,UAAMC,EAAE,GAAGX,IAAI,EAAf;AAEA,UAAMY,KAAK,GAAG;AACZD,MAAAA,EADY;AAEZH,MAAAA,IAFY;AAGZC,MAAAA,KAHY;AAIZC,MAAAA;AAJY,KAAd;AAOAJ,IAAAA,WAAW,CAACO,KAAK,IAAI,CAAC,GAAGA,KAAJ,EAAWD,KAAX,CAAV,CAAX;AACD,GAZyB,EAa1B,EAb0B,CAA5B;AAgBA,QAAME,WAAW,GAAGlB,WAAW,CAAEe,EAAD,IAAgB;AAC9CL,IAAAA,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACE,MAAN,CAAaC,OAAO,IAAIA,OAAO,CAACL,EAAR,KAAeA,EAAvC,CAAV,CAAX;AACD,GAF8B,EAE5B,EAF4B,CAA/B;AAIA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEJ,MAAAA,QAAF;AAAYO,MAAAA;AAAZ,KAA9B;AAAA,eACGV,QADH,eAEE,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEC;AAA1B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA7BD;;GAAMF,a;;KAAAA,a;;AA+BN,SAASc,QAAT,GAAsC;AAAA;;AACpC,QAAMC,OAAO,GAAGrB,UAAU,CAACK,YAAD,CAA1B;;AAEA,MAAI,CAACgB,OAAL,EAAc;AACZ,UAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;AACD;;AAED,SAAOD,OAAP;AACD;;IARQD,Q;;AAUT,SAASd,aAAT,EAAwBc,QAAxB","sourcesContent":["import React, { createContext, useCallback, useContext, useState } from 'react';\nimport { v4 as uuid } from 'uuid';\n\nimport ToastContainer from '../components/ToastContainer';\n\nexport interface ToastMessage {\n  id: string;\n  type?: 'info' | 'success' | 'error';\n  title: string;\n  description?: string;\n}\n\ninterface ToastContextData {\n  addToast(messages: Omit<ToastMessage, 'id'>): void;\n  removeToast(id: string): void;\n}\n\nconst ToastContext = createContext<ToastContextData>({} as ToastContextData);\n\nconst ToastProvider: React.FC = ({ children }) => {\n  const [messages, setMessages] = useState<ToastMessage[]>([]);\n\n  const addToast = useCallback(\n    ({ type, title, description }: Omit<ToastMessage, 'id'>) => {\n      const id = uuid();\n\n      const toast = {\n        id,\n        type,\n        title,\n        description,\n      };\n\n      setMessages(state => [...state, toast]);\n    },\n    [],\n  );\n\n  const removeToast = useCallback((id: string) => {\n    setMessages(state => state.filter(message => message.id !== id));\n  }, []);\n\n  return (\n    <ToastContext.Provider value={{ addToast, removeToast }}>\n      {children}\n      <ToastContainer messages={messages} />\n    </ToastContext.Provider>\n  );\n};\n\nfunction useToast(): ToastContextData {\n  const context = useContext(ToastContext);\n\n  if (!context) {\n    throw new Error('useToast must be used within an ToastProvider');\n  }\n\n  return context;\n}\n\nexport { ToastProvider, useToast };\n"]},"metadata":{},"sourceType":"module"}