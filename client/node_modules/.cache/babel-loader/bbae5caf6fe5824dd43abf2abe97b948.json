{"ast":null,"code":"var _jsxFileName = \"/Users/gabrieldsilva/Library/Mobile Documents/com~apple~CloudDocs/Documents/code/dev/volmate/client/src/routes/Route.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route as ReactDOMRoute, Redirect } from 'react-router-dom';\nimport { useAuth } from '../hooks/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Route = ({\n  isPrivate = false,\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    user\n  } = useAuth();\n  return /*#__PURE__*/_jsxDEV(ReactDOMRoute, { ...rest,\n    render: ({\n      location\n    }) => {\n      return isPrivate === !!user ? /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: isPrivate ? '/' : '/dashboard',\n          state: {\n            from: location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Route, \"9ep4vdl3mBfipxjmc+tQCDhw6Ik=\", false, function () {\n  return [useAuth];\n});\n\n_c = Route;\nexport default Route;\n\nvar _c;\n\n$RefreshReg$(_c, \"Route\");","map":{"version":3,"sources":["/Users/gabrieldsilva/Library/Mobile Documents/com~apple~CloudDocs/Documents/code/dev/volmate/client/src/routes/Route.tsx"],"names":["React","Route","ReactDOMRoute","Redirect","useAuth","isPrivate","component","Component","rest","user","location","pathname","state","from"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KAAK,IAAIC,aADX,EAGEC,QAHF,QAIO,kBAJP;AAMA,SAASC,OAAT,QAAwB,eAAxB;;;AAOA,MAAMH,KAA2B,GAAG,CAAC;AACnCI,EAAAA,SAAS,GAAG,KADuB;AAEnCC,EAAAA,SAAS,EAAEC,SAFwB;AAGnC,KAAGC;AAHgC,CAAD,KAI9B;AAAA;;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAWL,OAAO,EAAxB;AAEA,sBACE,QAAC,aAAD,OACMI,IADN;AAEE,IAAA,MAAM,EAAE,CAAC;AAAEE,MAAAA;AAAF,KAAD,KAAkB;AACxB,aAAOL,SAAS,KAAK,CAAC,CAACI,IAAhB,gBACL,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADK,gBAGL,QAAC,QAAD;AACE,QAAA,EAAE,EAAE;AACFE,UAAAA,QAAQ,EAAEN,SAAS,GAAG,GAAH,GAAS,YAD1B;AAEFO,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEH;AAAR;AAFL;AADN;AAAA;AAAA;AAAA;AAAA,cAHF;AAUD;AAbH;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAxBD;;GAAMT,K;UAKaG,O;;;KALbH,K;AA0BN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport {\n  Route as ReactDOMRoute,\n  RouteProps as ReactDOMRouteProps,\n  Redirect,\n} from 'react-router-dom';\n\nimport { useAuth } from '../hooks/auth';\n\ninterface RouteProps extends ReactDOMRouteProps {\n  isPrivate?: boolean;\n  component: React.ComponentType;\n}\n\nconst Route: React.FC<RouteProps> = ({\n  isPrivate = false,\n  component: Component,\n  ...rest\n}) => {\n  const { user } = useAuth();\n\n  return (\n    <ReactDOMRoute\n      {...rest}\n      render={({ location }) => {\n        return isPrivate === !!user ? (\n          <Component />\n        ) : (\n          <Redirect\n            to={{\n              pathname: isPrivate ? '/' : '/dashboard',\n              state: { from: location },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default Route;\n"]},"metadata":{},"sourceType":"module"}